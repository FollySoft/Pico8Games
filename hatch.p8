pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

--	hatching game

--	***** todo *****	
--	- sound/music?
--	- title/phase screens?

cartdata("hatch_scores")

function _init()
	poke(0x5f2d, 1)
	--globals
	prev_flag = null
	egg_score = 0
	feed_score = 0
	high_score = false
	
	phase = 1
	
	egg_timer = 6
	feed_timer = 11
	game_timer = 0
	timer_active = false

	top_chick = {}
	top_chick.x = 80
	top_chick.y = 50

	chick = {}
	chick.x = 62
	chick.y = 64
	chick.speed = 1
	chick.eating = false
	chick.stuffed = false

	-- populate worms list
	-- place_worms()
	flipped = true	
	reload ()
end


function get_flag()
	val = mget(stat(32)/8,stat(33)/8)
	flag = fget(val)
	return flag
end

function add_egg_score()
	get_flag()
	if egg_score < 50 then
		if flag == 1 and prev_flag == 2 then
			egg_score += 9
		end
		if flag == 2 and prev_flag == 1 then
			egg_score += 9
		end
	end
	if egg_score >= 50 and egg_score < 75 then
		if flag == 1 and prev_flag == 2 then
			egg_score += 8
		end
		if flag == 2 and prev_flag == 1 then
			egg_score += 8
		end
	end
	if egg_score >= 75 and egg_score < 100 then
		if flag == 1 and prev_flag == 2 then
			egg_score += 7
		end
		if flag == 2 and prev_flag == 1 then
			egg_score += 7
		end
	end
	if egg_score >= 100 then
		if flag == 1 and prev_flag == 2 then
			egg_score += 6
		end
		if flag == 2 and prev_flag == 1 then
			egg_score += 6
		end
	end
end

function place_worms()	
	local x = 0
	local y = 0
	for i = 1, 50 do
		--if count(worms) == 50 then return null
		--else
		x = rnd(128)
		y = rnd(128)

		mset(x,y,9)

		worms[i][1] = rnd(x)
		worms[i][2] = rnd(y)
		--end
	end
end

function eat_worms()              
	if chick.eating == true then
		val = pget((chick.x-2),(chick.y+8))
		if val == 14 and chick.stuffed == false then
			chick.stuffed = true
			feed_score += 1
			mset(((chick.x-2)/8) + 16,(chick.y+8)/8, 16)
			mset(((chick.x-2)/8) + 32,(chick.y+8)/8, 16)
		end			
	end
end	

function top_score()
	if dget(1) == nil then
		dset(1, feed_score)
		dset(2, flr(egg_score/10))
	elseif dget(1) < feed_score then
		high_score = true
		dset(1, feed_score)
		dset(2, flr(egg_score/10))
	end
end

function draw_arrow()
	get_flag()
	if flag == 2 then
		--print("egg!",5,0,7)
		spr(3,110,50)
		spr(4,110,58)
	end
	if flag == 1 then
		--print("egg!",5,0,7)
		spr(4,110,78)
		spr(5,110,86)
	end
end 

function chick_anim(o,sf,nf,sp,fl)
	--"simple animation function" (#19159#)
	--borrowed/modified from scathe
	--thanks!

	if(not o.a_ct) o.a_ct=0
	if(not o.a_st) o.a_st=0

	o.a_ct+=1

	if(o.a_ct%(30/sp)==0) then
	o.a_st+=1
	if(o.a_st==nf) o.a_st=0
	end

	o.a_fr=sf+o.a_st
	
	--mod for location-based animation
	--bottom half
	spr(8,o.x,o.y)
	--tophalf
	if o.a_fr == 10 then
		spr(o.a_fr,o.x-8,o.y,1,1,fl)
		chick.eating = true
	else
		spr(o.a_fr,o.x,o.y-8,1,1,fl)
		chick.eating = false
		chick.stuffed = false
	end
end

function _update()
	-- _update loop = 1/30th of a second
	--_update60 loop = 1/60th of a second
	if timer_active then
		game_timer += 1
	end

	-- ***** phase 1 - rub the egg *****
	if phase == 1 then
	
		add_egg_score()
		prev_flag = get_flag()
		
		if egg_score > 80 then
			timer_active = true
		end
		
		if egg_score > 0 then
			egg_score -= 2
		end
		
			-- timer to display countdown?
		if (game_timer%30) == 1 then			
			if timer_active  and egg_timer > 0 then		
				egg_timer -= 1				
			end	
		end
		
		if egg_timer == 0 then
			phase+=1
		end
	end
	
	-- ***** phase 2 - feed the chick *****
	if phase == 2 then
		timer_active = true
		if (game_timer%15) == 1 then
			flipped = not flipped
		end

		if (game_timer%30) == 1 then			
			if timer_active  and feed_timer > 0 then		
				feed_timer -= 1				
			end	
		end
	
		if btn(0) then
			chick.x -= 1
		end
		if btn(1) then
			chick.x += 1
		end
		if btn(2) then
			chick.y -= 1
		end
		if btn(3) then
			chick.y += 1
		end		

		eat_worms()
		if feed_timer == 0 then
			top_score()
			phase+=1
		end
	end

	-- ***** phase 3 - Display Scores/Retry *****
	if phase == 3 then
		if (btn(5)) then
			_init()
			--phase = 1
		end
	end
end

function _draw()
	cls(3)	

	--mget works by map coordinates.
	--divide by 8 to get actual corrdinates of tiles!
	--print(mget((stat(32)/8),(stat(33)/8)))
	
	-- ***** phase 1 - rub the egg *****
	if phase == 1 then
		--draw sky + egg
		rectfill(0,0,128,64,12)
		map()
		
		get_flag()
		
		--print(egg_score,1,12,7)
		if (egg_score > 180) then		
			rectfill(5,112-(180/2),7,112,7)
		else
			rectfill(5,112-(egg_score/2),7,112,7)
		end
		draw_arrow()
		if timer_active then		
			print(egg_timer, 64,12)
		end
		print("rub the egg!", 41,119,7)
	end
	
	-- ***** phase 2 - feed the chick *****
	if phase == 2 then
		
		if flipped == false then
			map(32,0)
		else
			map(16,0)
		end
		
		val = mget(chick.x + 4, chick.y + 4)
		flag = fget(val)
		if flag == 7 then
			mset(chick.x+4, chick.y+4, 16)
		end				
		
		-- for i = 1, count(worms) do
			-- spr(6,worms[i][1],worms[i][2])
		-- end				

		-- round out score for valid anim speed
		while (30%flr(egg_score/10)) != 0 do
			egg_score += 1
		end
		chick_anim(chick,9,2,flr(egg_score/10))	
		print("score: "..feed_score)

		if timer_active then		
			print(feed_timer, 64,12)
		end
		print("eat the worms!", 37,119,7)
	end

	-- ***** phase 3 - Display Scores/Retry *****
	if phase == 3 then
		if (game_timer%15) == 1 then
			flipped = not flipped
		end
		if high_score == true then
			chick.x = 76
			chick.y = 64
			if (flipped == false) then						
				print("new high score!", 34, 48, 7)				
			end
			print("top:"..dget(1), 42, 64, 7)
			chick_anim(chick,9,2,flr(egg_score/10))
			print("press \151 to restart", 26,80,7)
		else
			chick.x = 80
			chick.y = 70
			-- Display top chick
			print("top:"..dget(1), 46, 51, 7)
			chick_anim(top_chick,9,2,dget(2))
			print("score:"..feed_score,42,71,7)
			chick_anim(chick,9,2,flr(egg_score/10))
			print("press \151 to restart", 26,88,7)
			
		end

	end

	-- mouse sprite
	spr(0,stat(32)-1,stat(33)-1)
end

function reset_score()
	--	Option to wipe top score.
	--	Added for debugging, but figured it could stay.
	dset(1, 0)
end

menuitem(1, "reset top score", reset_score)

__gfx__
00000000ffffffffffffffff000aa000000aa000aaaaaaaa00000000000000000aaaaa0000000000000000000000000000000000000000000000000000000000
00707000ffffffffffffffff000aa000000aa000aaaaaaaa0000000000000000aa9aaaa000000000000000000000000000000000000000000000000000000000
00707070ffffffffffffffff00aaaa00000aa0000aaaaaa00eeee000000eeee0aa9aa9a0000000000000aaa00000000000000000000000000000000000000000
00707070ffffffffffffffff00aaaa00000aa0000aaaaaa00eeee000000eeee0aa9a9aa000aaa000000aaaaa0000000000000000000000000000000000000000
00777770ffffffffffffffff0aaaaaa0000aa00000aaaa00000ee000000ee000aaa9aaa00a5aaa00000aaaaa0000000000000000000000000000000000000000
70777770ffffffffffffffff0aaaaaa0000aa00000aaaa00000ee000000ee0000aaaaaaa0aaaaa00000a5aaa0000000000000000000000000000000000000000
07777770ffffffffffffffffaaaaaaaa000aa000000aa000000ee000000ee000000090009aaaaa000000aaa00000000000000000000000000000000000000000
00077700ffffffffffffffffaaaaaaaa000aa000000aa00000444400004444000099990000aaa000000000900000000000000000000000000000000000000000
00000000666666666666666600000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666600770000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666600777700777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666607777770777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666607777770777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666600000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666600000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666600000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001020000008080000000000000000000010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010100000000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1013101013101010100000100000130000101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010001300130000000000100000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101310101001010000000013000000100606060606060606060606061010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010010101010101000000000000100606060606060606060606061010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101001010111010101011000000000100606060606060606060606061010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101001010101010101011000000000100606060606060606060606061010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010100101010101010111010100000010100606060606060606060606061010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000100211020202020202020200000010100606060606000006060606061010100007070707070000070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000100202020202020202020200000010100606060606060606060606061010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000100202010212010202120200000010100606060606060606060606061010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000100202020202020202020210100010100606060606060606060606060010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001002021202020202021010100010100606060606060606060606060010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001000020202020202101010100010100606060606060606060606060010000007070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000010000000000010000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000101000000010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
